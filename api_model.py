from flask import Flask, request, jsonify
# Importation de Flask pour cr√©er une application web, request pour g√©rer les requ√™tes HTTP, et jsonify pour retourner des r√©ponses JSON
import joblib
import pandas as pd
# Initialisation de l'application Flask avec le nom du module courant
app = Flask(__name__)

model = joblib.load('modele_final.pkl')
print("‚úÖ Mod√®le charg√© avec succ√®s.")
# Lecture de la moyenne enregistr√©e (y_mean) √† partir du fichier 'y_mean.txt'
with open('y_mean.txt', 'r') as f:
    y_mean = float(f.read())
# Affichage de la valeur de y_mean pour confirmer son chargement
print(f"‚úÖ Moyenne y_mean charg√©e : {y_mean}")

# D√©finition d'une route '/predict' qui accepte les requ√™tes POST pour effectuer des pr√©dictions
@app.route('/predict', methods=['POST'])
def predict():
    try:
        # R√©cup√©ration des donn√©es JSON envoy√©es dans la requ√™te POST
        data = request.get_json()
        # Affichage des donn√©es re√ßues pour le suivi
        print(f"üì• Donn√©es re√ßues : {data}")
        # Conversion des donn√©es JSON en DataFrame pandas pour compatibilit√© avec le mod√®le
        input_data = pd.DataFrame([data])
        # Utilisation du mod√®le pour pr√©dire et ajout de la moyenne y_mean √† la pr√©diction
        prediction = model.predict(input_data) + y_mean
        # Affichage de la pr√©diction pour le suivi
        print(f"üì§ Pr√©diction retourn√©e : {prediction[0]}")
        # Retour de la pr√©diction sous forme de JSON avec la cl√© 'Densit√©_Sortie'
        return jsonify({'Densit√©_Sortie': prediction[0]})
    except Exception as e:
        # Gestion des erreurs : affichage de l'erreur pour le suivi
        print(f"‚ùå Erreur : {e}")
        # Retour d'une r√©ponse JSON avec le message d'erreur et un code d'erreur HTTP 500
        return jsonify({'error': str(e)}), 500

# V√©rification que le script est ex√©cut√© directement (et non import√© comme module)
if __name__ == '__main__':
    # Affichage d'un message pour indiquer le d√©marrage du serveur Flask
    print("üöÄ Lancement du serveur Flask sur http://127.0.0.1:5000 ...")
    # D√©marrage du serveur Flask sur l'h√¥te '0.0.0.0' (accessible depuis l'ext√©rieur) et le port 5000 avec le mode debug activ√©
    app.run(host='0.0.0.0', port=5000, debug=True)